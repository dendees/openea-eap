server:
  port: ${port:80}
spring:
  application:
    name: gateway
  datasource:
    url: ${jdbc_url:jdbc:mysql://eap-admin-mysql:3306/eap_admin?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false}
    username: ${jdbc_user:eap}
    password: ${jdbc_password:eap}
    driver-class-name: com.mysql.jdbc.Driver
  main:
    allow-bean-definition-overriding:  true
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      routes:
        - id: myRoute
          uri: lb://eap-admin-rest
          predicates:
            - Path=/eap/api/**
          filters:
            - StripPrefix=1
        - id: myRoute
          uri: lb://eap-oauth
          predicates:
            - Path=/sso/**
            - Path=/oauth/**
          filters:
            - StripPrefix=1
        - id: myRoute
          uri: lb://eap-bpm-rest
          predicates:
            - Path=/bpm/api/**
          filters:
            - StripPrefix=1
    consul:
      host: ${consul_host:consul-ui}
      port: ${consul_port:8500}
      config:
        enabled: true
        format: KEY_VALUE
        watch:
          enabled: true
        prefix: config
        name: ${spring.application.name}
      discovery:
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true
        # 表示注册时使用IP而不是hostname
        prefer-ip-address: true
        # 执行监控检查的频率
        health-check-interval: 30s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        # 健康检查的路径
        health-check-path: /actuator/info
        # 服务注册标识，格式为：应用名称+服务器IP+端口
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
mybatis:
  mapper-locations: classpath*:mybatis_mapper/*.xml
  type-aliases-package: org.openea.eap.model
  configuration:
    map-underscore-to-camel-case: true
redisson:
  address: redis://${redis_host:eap-redis}:${redis_port:6379}
logging:
  level:
    org.springframework.cloud.gateway: TRACE